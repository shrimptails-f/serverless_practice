# https://taskfile.dev

version: "3"

env:
  LOCALSTACK_HOST: http://localstack

tasks:
  local-deploy:
    desc: "LocalStackにデプロイ"
    cmds:
      - serverless deploy --stage dev --force --config serverless.yml

  local-destroy:
    desc: "LocalStack リソース削除"
    cmds:
      - serverless remove --stage dev --force

  production-deploy:
    desc: "本番AWSにデプロイ"
    cmds:
      - serverless deploy --stage prod --config serverless.prod.yml

  production-destroy:
    desc: "本番AWSリソースを削除"
    cmds:
      - serverless remove --stage prod --config serverless.prod.yml

  lambda-test:
    desc: "Python Lambda関数をテスト"
    cmds:
      - pytest tests/ -v

  test-api-dynamic:
    desc: "API IDを動的に取得してテスト"
    cmds:
      - |
        API_ID=$(aws --endpoint-url=http://localstack:4566 apigateway get-rest-apis --query 'items[0].id' --output text)
        BASE_URL="http://localstack:4566/restapis/$API_ID/dev/_user_request_"
        echo "Base URL: $BASE_URL"
        echo ""
        echo "=== Hello エンドポイントテスト ==="
        curl -v "$BASE_URL/hello"
        echo ""
        echo "=== Users エンドポイントテスト ==="
        curl -v "$BASE_URL/users"
        echo ""
        echo "=== User詳細エンドポイントテスト ==="
        curl -v "$BASE_URL/users/1"

  test-hello:
    desc: "Go API Gateway経由でテスト"
    cmds:
      - |
        ENDPOINT=$(serverless info --stage dev | grep "endpoint:" | awk '{print $2}' | sed 's/localhost/localstack/')
        echo "Testing: $ENDPOINT/hello"
        curl -v "$ENDPOINT/hello"

  test-users:
    desc: "Go API Gateway経由でテスト"
    cmds:
      - |
        ENDPOINT=$(serverless info --stage dev | grep "endpoint:" | awk '{print $2}' | sed 's/localhost/localstack/')
        echo "Testing: $ENDPOINT/users"
        curl -v "$ENDPOINT/users"

  test-lambda:
    desc: "Go Lambda関数を直接テスト"
    cmds:
      - |
        curl -X POST http://localstack:4566/2015-03-31/functions/lambda-demo-dev-hello/invocations \
          -H "Content-Type: application/json" \
          -d '{"name": "World"}'

  test-offline:
    desc: "serverless-offlineでテスト"
    cmds:
      - curl -v http://localhost:3000/dev/hello

  localstack-watch:
    desc: "serverless-offlineでテスト"
    cmds:
      - docker logs $(docker ps -q --filter "name=localstack") -f -n 0

  # 使わないが、メモとして残しておく。
  # create-apigateway:
  #   desc: "create user table"
  #   cmds:
  #     - aws --endpoint-url=http://localstack:4566 apigateway create-rest-api --name lambda-demo-api --region ap-northeast-1 --no-cli-pager

  # 使わないが、メモとして残しておく。
  # create-table:
  #   desc: "create user table"
  #   cmds:
  #     - aws dynamodb create-table --table-name Users --attribute-definitions AttributeName=id,AttributeType=S --key-schema AttributeName=id,KeyType=HASH --billing-mode PAY_PER_REQUEST --endpoint-url http://localstack:4566 --no-paginate
